@using System.Globalization;
@model Manero_WebApp.Models.Schemas.ProductModel

<partial name="/Views/Partials/FullScreenComponents/Navbars/_TopNavbar.cshtml" />

<div class="container">
    <div class="product-details-mobile">
        <div class="product-card">
            <div class="product-image">
                <img src="@Model.ImageUrl.FirstOrDefault()" alt="@Model.Name" class="product-image">
            </div>
            <div class="titleAndFav">
                <h2 class="product-title">@Model.Name</h2>
                <i class="fa-light fa-heart"></i>
            </div>
            <div class="product-rating">
                @{
                    var averageRating = Model.Reviews.Any() ? Model.Reviews.Average(r => r.Rating) : 0;
                    var numberOfReviews = Model.Reviews.Count;
                }
                @for (var i = 0; i < (int)Math.Round(averageRating); i++)
                {
                    <i class="fa-solid fa-star"></i>
                }
                @for (var i = 0; i < 5 - (int)Math.Round(averageRating); i++)
                {
                    <i class="fa-regular fa-star"></i>
                }
                <span class="nr">(@numberOfReviews)</span>
            </div>
            <div class="priceAndAmount">
                <div class="product-price">$@Model.Price.ToString("N2", CultureInfo.CreateSpecificCulture("en-US"))</div>
                <div class="container-amount">
                    <span>-</span><span>1</span><span>+</span>
                </div>
            </div>
                @if (Model.Tags.Contains("sale"))
                {
                    <div class="product-discount">Sale Price: $@((Model.Price * 0.5m).ToString("N2", CultureInfo.CreateSpecificCulture("en-US")))</div>
                }
            <div class="mt-3">Size</div>
            <div class="product-size">
                @foreach (var size in Model.Sizes)
                {
                    <div class="button-custom">@size</div>
                }
            </div>
            <div class="product-color">
                <div class="text">Color</div>
                <div class="buttons-container">
                    @foreach (var color in Model.Colors)
                    {
                        <div class="button-custom" style="background-color: @color;"></div>
                    }
                </div>
            </div>
            <div class="product-description">
                <p>Description</p>
                @Model.Description</div>
            <button class="btn-theme">+ Add to cart</button>
            <div class="product-reviews">
                
                <div class="d-flex justify-content-between">
                    <h3>Reviews (@numberOfReviews)</h3>
                    <a href="#">view all<i class="fa-solid fa-chevron-right ms-2"></i></a>
                </div>
                @if (Model.Reviews != null && Model.Reviews.Any())
                {
                    <ul class="review-list">
                        @foreach (var review in Model.Reviews)
                        {
                            <li class="review-item">
                                <div class="reviewer-image">
                                    <img src="@review.User.ProfileImgUrl" alt="@review.User.FullName">
                                </div>
                                <div class="review-content">
                                    <div class="reviewer-name-date">
                                        <span class="reviewer-name">@review.User.FullName</span>
                                        <div class="review-rating">
                                            @for (var i = 0; i < review.Rating; i++)
                                            {
                                                <i class="fa-solid fa-star"></i>
                                            }
                                            @for (var i = 0; i < 5 - review.Rating; i++)
                                            {
                                                <i class="fa-regular fa-star"></i>
                                            }
                                        </div>
                                    </div>
                                    <span class="review-date">@review.DateCreated.ToString("dd MMM yyyy")</span>
                                    <div class="review-text">@review.ReviewDescription</div>
                                </div>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p>No reviews yet.</p>
                }
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="product-details-desktop">
        <div class="product-image-container">
            <div class="product-image">
                <img src="@Model.ImageUrl.FirstOrDefault()" alt="@Model.Name">
            </div>
        </div>
        <div class="product-details">
            <h2 class="product-title">@Model.Name</h2>
            <div class="product-rating">
                @{
                    var averageRatingDesktop = Model.Reviews.Any() ? Model.Reviews.Average(r => r.Rating) : 0;
                    var numberOfReviewsDesktop = Model.Reviews.Count;
                }
                @for (var i = 0; i < (int)Math.Round(averageRating); i++)
                {
                    <i class="fa-solid fa-star"></i>
                }
                @for (var i = 0; i < 5 - (int)Math.Round(averageRating); i++)
                {
                    <i class="fa-regular fa-star"></i>
                }
                <span class="nr">(@numberOfReviews)</span>
            </div>
            <div class="priceAndAmount">
                <div class="product-price">$@Model.Price.ToString("N2", CultureInfo.CreateSpecificCulture("en-US"))</div>
                <div class="container-amount">
                    <span>-</span><span>1</span><span>+</span>
                </div>
            </div>
            @if (Model.Tags.Contains("sale"))
            {
                <div class="product-discount">Sale Price: $@((Model.Price * 0.5m).ToString("N2", CultureInfo.CreateSpecificCulture("en-US")))</div>
            }
            <div class="mt-3">Size</div>
            <div class="product-size">
                @foreach (var size in Model.Sizes)
                {
                    <div class="button-custom">@size</div>
                }
            </div>
            <div class="product-color">
                <div class="text">Color</div>
                <div class="buttons-container">
                    @foreach (var color in Model.Colors)
                    {
                        <div class="button-custom" style="background-color: @color;"></div>
                    }
                </div>
            </div>
            <div class="product-description">
                <p>Description</p>
                @Model.Description
            </div>
            <button class="btn-theme">+ Add to cart</button>
            <div class="product-reviews">
                <div class="d-flex justify-content-between">
                    <h3>Reviews (@numberOfReviews)</h3>
                    <a href="#">view all<i class="fa-solid fa-chevron-right ms-2"></i></a>
                </div>
                @if (Model.Reviews != null && Model.Reviews.Any())
                {
                    <ul class="review-list">
                        @foreach (var review in Model.Reviews)
                        {
                            <li class="review-item">
                                <div class="reviewer-image">
                                    <img src="@review.User.ProfileImgUrl" alt="@review.User.FullName">
                                </div>
                                <div class="review-content">
                                    <div class="reviewer-name-date">
                                        <span class="reviewer-name">@review.User.FullName</span>
                                        <div class="review-rating">
                                            @for (var i = 0; i < review.Rating; i++)
                                            {
                                                <i class="fa-solid fa-star"></i>
                                            }
                                            @for (var i = 0; i < 5 - review.Rating; i++)
                                            {
                                                <i class="fa-regular fa-star"></i>
                                            }
                                        </div>
                                    </div>
                                    <span class="review-date">@review.DateCreated.ToString("dd MMM yyyy")</span>
                                    <div class="review-text">@review.ReviewDescription</div>
                                </div>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p>No reviews yet.</p>
                }
            </div>
        </div>
    </div>
</div>

<partial name="/Views/Partials/FullScreenComponents/Footer/_Footer.cshtml" />